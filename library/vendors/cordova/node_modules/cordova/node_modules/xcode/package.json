{
  "author": {
    "name": "Andrew Lunny",
    "email": "alunny@gmail.com"
  },
  "name": "xcode",
  "description": "parser for xcodeproj/project.pbxproj files",
  "version": "0.5.1",
  "main": "index.js",
  "repository": {
    "url": "https://github.com/alunny/node-xcode.git"
  },
  "engines": {
    "node": ">=0.6.7"
  },
  "dependencies": {
    "pegjs": "0.6.2",
    "node-uuid": "1.3.3"
  },
  "devDependencies": {
    "nodeunit": "0.6.4"
  },
  "scripts": {
    "test": "node_modules/.bin/nodeunit test/parser test"
  },
  "contributors": [
    {
      "name": "Andrew Lunny",
      "url": "@alunny"
    },
    {
      "name": "Anis Kadri",
      "url": "@imhotep"
    },
    {
      "name": "Mike Reinstein",
      "url": "@mreinstein"
    },
    {
      "name": "Filip Maj",
      "url": "@filmaj"
    }
  ],
  "readme": "# node-xcode\n\n> parser/toolkit for xcodeproj project files\n\nAllows you to edit xcodeproject files and write them back out.\n\n## Example\n\n    // API is a bit wonky right now\n    var xcode = require('xcode'),\n        fs = require('fs'),\n        projectPath = 'myproject.xcodeproj/project.pbxproj',\n        myProj = xcode.project(projectPath);\n\n    // parsing is async, in a different process\n    myProj.parse(function (err) {\n        myProj.addHeaderFile('foo.h');\n        myProj.addSourceFile('foo.m');\n        myProj.addFramework('FooKit.framework');\n        \n        fs.writeFileSync(projectPath, myProj.writeSync());\n        console.log('new project written');\n    });\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/alunny/node-xcode/issues"
  },
  "_id": "xcode@0.5.1",
  "_from": "xcode@0.5.1"
}
